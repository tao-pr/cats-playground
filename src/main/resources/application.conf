run-mode = "attempt-runner"

run-params = [
  { 
    # Generate multiple CSV files
    type = "generate-csv", 
    output-dir = "./data/csv/", 
    num-files = 50, 
    num-lines = 15
    prob-make-malform = 0.1
  }
  {
    # Process CSV files and produce output JSONs
    type = "csv-to-json", 
    input-dir = "./data/csv/", 
    output-dir = "./data/json/"
  }
  {
    # Read and combine multiple JSON files
    type = "combine-json"
    input-dir = "./data/json/"
    read-timeout = 1000 # in milliseconds
  }
  { 
    # Generate approximation of Pi with MCMC
    type = "pi-mcmc", 
    iter = 25000 
  }
  {
    # Fibers with Eval
    type = "eval-params"
    num-threads = 10
    vector-size = 3
    # available modes are: always, eager, later
    eval-mode = "later" 
  }
  {
    type = "fork-params"
    n = 50
    m = 5
    prob-blocking = 0.1
    prob-recursive = 0.75
  }
  {
    type = "race-params"
    n = 25
    fail-rate = 0.1
    timeout = 50 # millisec
  }
  {
    type = "semaphore-params"
    # number of max permits from semaphore
    max-shared = 7
  }
  {
    type = "attempt-params"
    n = 20
    success-rate = 0.5
    hard-fail-rate = 0.2 # absolute p(fail) = hard-fail-rate * success-rate
  }
  {
    type = "io-bound-params"
    input-dir = ""
    n-threads = 10
    timeout = 200 // ms
  }
  
]